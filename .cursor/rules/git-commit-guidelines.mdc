---
alwaysApply: true
---
# Git 提交规范

## 提交前检查清单

在执行 git commit 之前，必须完成以下检查：

### 1. 文档同步检查

确保以下文档与最新代码实现保持一致：

- **[README.md](mdc:README.md)** - 项目介绍、功能说明、使用方法
- **[PROJECT_DESIGN.md](mdc:PROJECT_DESIGN.md)** - 项目设计文档、功能说明

如果代码有以下变更，必须更新文档：
- 新增功能或特性
- 修改用户界面
- 变更配置方式
- 修改使用方法
- 更新依赖项

### 2. 提交信息格式

使用简明概要的提交信息格式：

```
<type>: <简明描述>
```

信息应简短明了，不强制要求单行，可根据需要适当补充说明。

**Type 类型：**
- `feat`: 新功能
- `fix`: 修复bug
- `docs`: 文档更新
- `style`: 代码格式调整
- `refactor`: 重构代码
- `test`: 测试相关
- `chore`: 构建/工具变动

**示例：**
```
feat: 添加串口自动重连功能
fix: 修复数据接收乱码问题
docs: 更新README使用说明
```

## Git 中文编码配置

为避免提交信息中文乱码问题，需要进行以下配置：

### Windows PowerShell 临时设置

每次在 PowerShell 中使用 Git 前执行：

```bash
# 设置 PowerShell 使用 UTF-8 编码
chcp 65001
```

### 提交中文信息的最佳实践

**方法1：使用文件方式提交（推荐）**

```bash
# 1. 创建临时文件写入提交信息
echo "feat: 实现新功能

- 功能点1
- 功能点2" > commit_msg.txt

# 2. 使用文件提交
git commit -F commit_msg.txt

# 3. 删除临时文件
del commit_msg.txt
```

**方法2：使用简短信息**

```bash
git commit -m "feat: 实现新功能"
```

**重要提醒：**
- **推荐使用文件方式提交**，避免PowerShell中文乱码问题
- 避免在 PowerShell 中使用多行 `-m` 参数
- 提交后使用 `git log -1` 验证中文显示正常

## 提交流程

```
1. 完成代码修改
2. 检查并更新 README.md 和 PROJECT_DESIGN.md（如有必要）
3. 配置 Git 中文编码（如未配置）
4. 生成简明的提交信息
5. 执行 git add 和 git commit（推荐使用文件方式）
6. 验证提交信息显示正常
```

**注意：** git commit 命令本身会提供确认机制，无需额外的用户确认步骤。
